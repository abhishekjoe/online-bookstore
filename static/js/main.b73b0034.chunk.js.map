{"version":3,"sources":["components/BookTile.js","components/BookList.js","components/BookDetail.js","components/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["BookTile","_ref","book","onAddToCart","navigate","useNavigate","React","createElement","className","src","image","alt","title","author","onClick","handleViewDetails","id","concat","BookList","books","onFilter","type","placeholder","onChange","map","key","BookDetail","useParams","find","price","Math","floor","random","categories","edition","pages","Cart","cart","onRemoveFromCart","length","item","App","filteredBooks","setFilteredBooks","useState","setCart","useEffect","handleAddToCart","console","log","Router","Link","to","Routes","Route","path","element","event","keyword","target","value","toLowerCase","filtered","filter","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b73b0034.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst BookTile = ({ book, onAddToCart }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleViewDetails = (id) => {\r\n    navigate(`/book/${id}`);\r\n  };\r\n  return (\r\n    <div className=\"book-tile\">\r\n      <img src={book.image} alt={book.title} />\r\n      <div className=\"book-tile-content\">\r\n        <h3 title={book.title}>{book.title}</h3>\r\n        <p title={book.author}>{book.author}</p>\r\n      </div>\r\n      <div className=\"book-tile-buttons\">\r\n        <button onClick={() => onAddToCart(book)}>Add to Cart</button>\r\n        <button onClick={() => handleViewDetails(book.id)}>View Details</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookTile;\r\n","import React from 'react';\r\nimport BookTile from './BookTile';\r\n\r\nconst BookList = ({ books, onFilter,onAddToCart }) => {\r\n  return (\r\n    <div>\r\n      <input type=\"text\" placeholder=\"Search books...\" onChange={onFilter} />\r\n      <div className=\"book-list\">\r\n        {books.map((book) => (\r\n          <BookTile key={book.id} book={book} onAddToCart={onAddToCart}/>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookList;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst BookDetail = ({ books, onAddToCart }) => {\r\n  const { id } = useParams();\r\n  const book = books.find((book) => book.id === id);\r\n  const price = Math.floor(Math.random() * (1500 - 500 + 1) + 500);\r\n  if (!book) {\r\n    return <div>Book not found</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"book-detail\">\r\n      <img src={book.image} alt={book.title} />\r\n      <div className=\"book-detail-content\">\r\n        <h1>{book.title}</h1>\r\n        <h2 className=\"author\">{book.author}</h2>\r\n        <table>\r\n          <tr>\r\n            <td className=\"label\">Price: </td>\r\n            <td className=\"value\">${price}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"label\">categories: </td>\r\n            <td className=\"value\">{book.categories}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"label\">edition: </td>\r\n            <td className=\"value\"> {book.edition}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"label\">pages: </td>\r\n            <td className=\"value\">{book.pages}</td>\r\n          </tr>\r\n        </table>\r\n        <div className=\"actions\">\r\n          <button onClick={() => onAddToCart(book)}>Add to Cart</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default BookDetail;\r\n","import React from \"react\";\r\n\r\nconst Cart = ({ cart, onRemoveFromCart }) => {\r\n  return (\r\n    <div className=\"cart-container\">\r\n      <div className=\"cart-header\">\r\n        <h1>Your Cart</h1>\r\n      </div>\r\n      {cart?.length > 0 ? (\r\n        <ul className=\"cart-items\">\r\n          {cart.map((item) => (\r\n            <li key={item.id} className=\"cart-item\">\r\n              <img src={item.image} alt={item.title} />\r\n              <div className=\"cart-item-details\">\r\n                <h2 className=\"cart-item-title\">{item.title}</h2>\r\n                <p className=\"cart-item-author\">{item.author}</p>\r\n                <p className=\"cart-item-price\">\r\n                  ${Math.floor(Math.random() * (1500 - 500 + 1) + 500)}\r\n                </p>\r\n              </div>\r\n              <div className=\"cart-item-actions\">\r\n                <button\r\n                  className=\"cart-item-remove\"\r\n                  onClick={() => onRemoveFromCart(item.id)}\r\n                >\r\n                  Remove\r\n                </button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        \"Your Cart Is Empty\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport BookList from './components/BookList';\nimport BookDetail from './components/BookDetail';\nimport Cart from './components/Cart';\nimport books from './mock/books.json'\nconst App = () => {\n  const [filteredBooks, setFilteredBooks] = useState(books);\n  const [cart, setCart] = useState([]);\n\n  useEffect(() => {\n    // Fetch books from API or database\n    // Example: setBooks(fetchBooks());\n    // Here you should set both books and filteredBooks with the fetched data\n  }, []);\n\n  const handleFilter = (event) => {\n    const keyword = event.target.value.toLowerCase();\n    const filtered = books.filter((book) =>\n      book.title.toLowerCase().includes(keyword)\n    );\n    setFilteredBooks(filtered);\n  };\n\n  const handleAddToCart = (book) => {\n    setCart([...cart, book]);\n  };\n\n  const handleRemoveFromCart = (id) => {\n    setCart(cart.filter((item) => item.id !== id));\n  };\nconsole.log(cart)\n  return (\n    <Router>\n      <div className=\"app\">\n      <nav className=\"navbar\">\n          <Link to=\"/\" className=\"nav-link\">Book List</Link><br/>\n          <Link to=\"/cart\" className=\"nav-link\">Cart ({cart.length})</Link>\n        </nav>\n        <Routes>\n          <Route path=\"/\" element={<BookList books={filteredBooks} onFilter={handleFilter} onAddToCart={handleAddToCart} />} />\n          <Route\n            path=\"/book/:id\"\n            element={<BookDetail books={filteredBooks} onAddToCart={handleAddToCart} />}\n          />\n          <Route path=\"/cart\" element={<Cart cart={cart} onRemoveFromCart={handleRemoveFromCart} />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}